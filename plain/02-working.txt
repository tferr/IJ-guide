
Working with ImageJpart:Working-with-ImageJ

This part introduces some basic aspects of ImageJ so that you can
use the software more efficiently. It also introduces some important
terms and concepts used throughout this guide. You may skip it if
you already use the program efficiently and are familiar with terms
such as sub:Virtual-Stacks, sub:Hyperstacks-Intro,
sub:Pseudocolor-Images, sub:Color-Composites
or sub:Composite-selections.


Using Keyboard Shortcutssub:Using-Shortcuts

You'll learn more and more Keyboard@Keyboard Shortcuts and Modifier keys,Shortcutsshortcut
keys as you use ImageJ, because (almost) all shortcuts are listed
throughout ImageJ menus. Similarly, in this guide each command has
its shortcut key listed on its name (flanked by square brackets).
Please note that the notation for these key-bindings is case sensitive,
i.e., Shift-modifiers are not explicitly mentioned (a capital A
means Shift-A) and assumes that Require control key
for shortcuts in EditOptionssub:Misc...
is unchecked (i.e., except when using the IJ sub:ImageJ-Macro-Editor
or the sec:Text-Tool, you won't have to hold down the Control
key to use menu shortcuts). For example, the command Editsub:Invert-=00005BI=00005D
can be evoked by Shift I or Ctrl Shift I if Require control
key for shortcuts is checked. The full list of ImageJ shortcuts (see
sec:Keyboard-Shortcuts) can be retrieved at any time using
the PluginsUtilitiessub:List-Shortcuts...
command.

There are three Modifier keysmodifier keys in ImageJ:
lyxlist00.00.0000
[Control] (Command KeyCommand key on
Apple keyboards) Denoted by 'Ctrl'CtrlControl key. In this guide also the Command key in Apple keyboards
or Ctrl in this document. Although a control key is typically present
on Apple keyboards, on a Macintosh computer running ImageJ the Command
key   Cmd replaces the functionality of the Control key of other
operating systems. For sake of simplification, 'Ctrl' will always
refer to both  throughout this guide.
[Shift] Denoted by 'Shift'ShiftShift key
or Shift in this document.
[Alt] Denoted by 'Alt'AltAlt, Option or Meta key
or Alt in this document. This is also the 'Option' or 'Meta'
key on many keyboards. In ImageJ, it is also used to type special
unit symbols such as  (AltM) or  (AltShiftA). 
lyxlist
sec:Keyboard-Shortcuts, Pluginssub:Shortcuts

infobox
infobox:Frontmost-windowFrontmost Window and Window Activation


In ImageJ, all operations are performed on the active (frontmost)
image (which has its title bar highlighted). If a window is already
open it will activate when its opening command is re-run, e.g., if
the BC window is already opened (ImageAdjustsub:Brightness/Contrast...=00005BC=00005D),
pressing its keyboard shortcut (Shift C) will activate
it. 


Pressing Enter on any image will bring the fig:The-ImageJ-window
to the foreground. In addition, it is also possible to permanently
place the main window above all other windows (see  sub:FloatingMainWin).
infobox



Finding Commandssec:Finding-Commands

Navigating through the extensive list of ImageJ commands, macros and
plugins may be quite cumbersome. Through its built-in Command Finder/LauncherC-ComandFinder,
ImageJ offers an expedite alternative that allows you to retrieve
commands extremely fast: PluginsUtilitiessub:Command-Finder.

In addition, ImageJ features a find function that locates macros,
scripts and plugins source (.java) files on your computer: the PluginsUtilitiessub:Search...
command. Because most of IJ source files contain circumstanced comments,
you can use this utility to retrieve files related not only to a image
processing routine (e.g., background or co-localization)
but also to a practical context such as radiogram, cell
or histology. Indeed, ImageJ source files contain detailed
annotations useful to both developers and regular users that want
to know more about ImageJ routines and algorithms.

sub:Search... and sub:Command-Finder
are described in detail in Pluginssub:Utilities.
figure
centering
11.1emPluginsUtilitiessub:Command-Finder

centering

centering
images/CommandFinderAndSearch
centering

PluginsUtilitiessub:Search...
figure


sub:Control-Panel..., sec:Keyboard-Shortcuts
and http://imagej.nih.gov/ij/macros/SourceCodeRetriever.txtSourceCodeRetriever,
a macro that searches for a menu entry and retrieves the source file
of the respective command


[Undo and Redo]Undo and Redosec:Undo-and-Redo

Probably the first thing you will notice is that ImageJ does not have
a large Undoundo/redo buffer. Undo (Editsub:Undo-=00005Bz=00005D)
is currently limited to the most recent image editing/filtering
operation. With time you will appreciate that this is necessary to
minimize memory overhead. Nevertheless, with IJ1.45 and later,
sub:Undo-=00005Bz=00005D is, in most
cases, undoable and can be applied to multiple images if Keep
multiple undo buffers is checked in EditOptionssub:Memory-=000026-Threads...

If you cannot recover from a mistake, you can always use Filesub:Revert=00005Br=00005D
to reset the image lo its last saved state. For selections, EditSelectionsub:Restore-Selection-=00005BE=00005D
can be used to recover any misdealt selection.

In ImageJ the equivalent to Redo'Redo' is the Processsub:Repeat-Command-=00005BR=00005D,
that re-runs the previous used command (skipping Editsub:Undo-=00005Bz=00005D
and Filesub:Open... commands).

PluginsUtilitiessub:Reset...,
http://imagejdocu.tudor.lu/doku.php?id=plugin:utilities:multi_undo:startMulti Undo
plugin


Image Types and Formatssec:Image-Types

Image typesDigital Images are two-dimensional grids of pixelpixelPicture element
intensities values with the width and height of the image being defined
by the number of pixels in  (rows) and  (columns) direction.
Thus, pixels (picture elements) are the smallest single components
of images, holding numeric values - pixel intensities - that range
between black and white. The characteristics of this range, i.e.,
the number of unique intensity (brightness) values that can exist
in the image is defined as the bitbitBinary digit-depth
of the image and specifies the level of precision in which intensities
are coded, e.g.: A 2-bit image has tones: 00 (black),
01 (gray), 10 (gray), and 11 (white). A 4-bit image has tones
ranging from 0000 (0) to 1111 (16), etc. In terms of bits per pixel
(bppbppBits per pixel), the most frequent types
of images (Imagesub:Type) that ImageJ deals
with are (ImageJ2sub:ImageJ2intro supports http://imagejdev.org/imagej2-pixel-typesmany more types of image data):
lyxlistRGB-Color-
[8-bit] Images that can display 256 ()
gray levels (integers only).
[16-bit] Images that can display 65,536
() gray levels (integers only).
[32-bit] Images that can display 4,294,967,296
() gray levels (real numbers). In 32-bit images, pixels
are described by http://en.wikipedia.org/wiki/Floating_pointfloating point
values and can have any intensity value including NaNNaNNot a Number
(Not a Number).
[RGB Color] sec:Color-Images that
can display 256 values in the Red, Green and
Blue channel. These are 24-bit () images.
RGBRGBRed Green Blue color images can also be 32-bit
color images (24-bit color images with additional eight bits coding
alpha blending values, i.e., transparency).
lyxlist

Native Formatssub:Native-Formats

Natively (i.e. without the need of third-party plugins) ImageJ opens
the following formats: TIFFTIFFTagged Image File Format,
GIFGIFGraphics Interchange Format, JPEGJPEGJoint Photographic Experts Group,
PNGPNGPortable Network Graphics, DICOMDICOMDigital Imaging and Communications in Medicine,
BMPBMPBitmap Image File (Device Independent Bitmap, DIB),
PGMPGMPortable GrayMap and FITSFITSFlexible Image Transport System.
Image formats!NativeMany more formats are supported with
the aid of plugins. These are discussed in sub:Non-native-Supported-Formats.
lyxlist00.00.0000
[TIFF] (Tagged Image File Format) is the 'default' format
of ImageJ (cf. Filesub:Save=00005Bs=00005D).
Images can be 1-bit, 8-bit, 16-bit (unsigned(A numeric variable is signed if it can represent both positive and
negative numbers, and unsigned if it can only represent positive numbers.)), 32-bit (real) or RGB color. TIFFTIFF files with multiple
images of the same type and size open as sub:Stacks-Intro
or sub:Hyperstacks-Intro. ImageJ opens Lossless compressionlossless
compressed TIFF files (see infobox:Formats infobox:Formats)
by the LZWLZWLempel-Ziv-WelchLZW compression,
PackBits compressionPackBits and ZIP!Lossless compressionZIP
(Deflate@Deflate Zip compression,Deflate/Inflate)C-ZIPcompressedTIFFs
compression schemes. In addition, TIFF files can be opened and saved
as ZIP!Archived TIFF filesZIP archives.

Tiff tags and information needed to import the file (number of images,
offset to first images, gap between images) are printed to the sec:Log-Window
when ImageJ is running in Debug Mode (EditOptionssub:Misc...,
see sec:Settings-and-Preferences).
[DICOM] (Digital Imaging and Communications in Medicine)
is a standard popular in the medical imaging community. Support in
ImageJ is limited to uncompressed DICOMDICOM files. DICOM
files containing multiple images open as sub:Stacks-Intro.

Use Imagesub:Show-Info...
to display the DICOM header information. A DICOM sequence can be opened
using FileImportsub:Image-Sequence...
or by dragging and dropping the folder on the 'ImageJ' window. Imported
sequences are sorted by image number instead of filename and the tags
are preserved when DICOM images are saved in TIFF format. ImageJ supports
custom DICOM dictionaries, such as the one at http://imagej.nih.gov/ij/download/docs/DICOM_Dictionary.txt.
More information can be found at the http://www.cabiatl.com/mricro/dicom/index.htmlCenter for Advanced Brain Imaging.
[FITS] (Flexible Image Transport System) image is the
format adopted by the astronomical community for data interchange
and archival storage. Use Imagesub:Show-Info...
to display the FITSFITS header. More information http://fits.gsfc.nasa.govhere.
[PGM] (PGMPortable GrayMap), PBMPBMPortable BitMap
(Portable BitMap) and PPMPPMPortable PixMap
(Portable PixMap) are simple image formats that use an ASCIIASCIIAmerican Standard Code for Information Interchange
header. More information http://local.wasp.uwa.edu.au/ pbourke/dataformats/ppm/here.
[AVI] (Audio Video Interleave) is a container format which
can contain data encoded in many different ways. ImageJ only supports
uncompressed AVIAVIs, various YUVYUV 4:2:2 compressed
formats, and PNGPNG or JPEGJPEG-encoded individual
frames. Note that most MJPGMJPGMJPGMotion-JPEG
(motion-JPEG) formats are not read correctly. Attempts to open AVIs
in other formats will fail.
lyxlist
sub:Non-native-Supported-Formats, infobox:Formats
infobox:Formats, infobox:JpegAlert infobox:JpegAlert


Non-native Formats sub:Non-native-Supported-Formats

When opening a file, ImageJ first checks whether it can natively handle
the format. Image formats!Non-nativeIf ImageJ does not recognize
the type of file it calls for the appropriate reader plugin using
http://imagej.nih.gov/ij/plugins/file-handler.htmlHandleExtraFileTypes,
a plugin bundled with ImageJ. If that fails, it tries to open the
file using the OME Bio-Formats@OME Bio-Formats Bio-Formats,LOCI Bio-Formats@LOCI Bio-Formats Bio-Formats,Bio-formats@Bio-formats LOCI,http://loci.wisc.edu/software/bio-formatsOME Bio-Formats library
(if present), a remarkable plugin that supports more than http://loci.wisc.edu/bio-formats/formatsone hundred of the most common
file formats used in microscopy. If nevertheless the file cannot be
opened, an error message is displayed. 

Because both these plugins are under active development, it is important
that you keep them updated. The OME Bio-Formats library can be updated
using its self-updating plugin (PluginsLOCIUpdate LOCI Plugin)
or Fiji's built-in updater (HelpUpdate Fiji).
The following websites provide more information on the OME Bio-Formats:
itemize
http://loci.wisc.edu/bio-formats/imagejhttp://loci.wisc.edu/bio-formats/imagej
http://fiji.sc/Bio-Formatshttp://fiji.sc/Bio-Formats
http://loci.wisc.edu/bio-formats/using-bio-formatshttp://loci.wisc.edu/bio-formats/using-bio-formats
itemize
In addition, the ImageJ web site lists http://imagej.nih.gov/ij/plugins/iomore than sixty plugins
that recognize more 'exotic' file formats. The ImageJ Documentation
Portal also maintains a (somewhat outdated) http://imagejdocu.tudor.lu/doku.php?id=faq:general:which_file_formats_are_supported_by_imagejlist of file formats
that are supported by ImageJ.

sub:Native-Formats, Filesub:Import,
infobox:Formats infobox:Formats, infobox:JpegAlert
infobox:JpegAlert, http://imagej.nih.gov/ij/plugins/acqAcquisition plugins,
http://imagej.nih.gov/ij/plugins/ioInput/Output plugins

infobox
infobox:FormatsImage Types: Lossy Compression and Metadata


Two critical aspects to keep in mind when converting images:
description
[misc:LossyCompressionLossy compression] Transcoding
an image into a format that uses Lossy compressionlossy compression
will alter the original data, introducing artifacts (see infobox:JpegAlert
infobox:JpegAlert). This is the case, e.g., for JPEG formats
(with the exception of some JPEG2000@JPEG2000JPEG2000
images that use lossless compression). As such, these types of data
are intended for human interpretation only and are not suitable for
quantitative analyses
[misc:MetadataMetadata] In ImageJ, Metadatametadata
associated with the image, such as scale, gray value calibration and
user comments is only supported in tiff and zip (compressed tiff)
images. In addition, selections and sub:Overlay-Intro are
also saved in the TIFF header (cf. Filesub:Save=00005Bs=00005D).
None of the above is saved in other formats (cf. sub:Native-Formats).description
infobox



Stacks, Virtual Stacks and Hyperstackssec:StacksVirtualStacksHyperStks


Stackssub:Stacks-Intro

ImageJ can display multiple spatially or temporally related images
in a single window. These image sets are called stacks. The images
that make up a stack are called slices. In Stacksstacks,
a pixel (which represents 2D image data in a bitmap image) becomes
a voxelvoxelVolumetric pixel (volumetric pixel),
i.e., an intensity value on a regular grid in a three dimensional
space. 

All the slices in a stack must be the same size and bit depth. A scrollbar
provides the ability to move through the slices and the slider is
preceded by a play/pause icon that can be used to start/stop stack
animation. Right-clicking on this icon runs the sub:Animation-Options...
dialog box.

Most ImageJ filters will, as an option, process all the slices in
a stack. ImageJ opens multi-image TIFF files as a stack, and saves
stacks as multi-image TIFFs. The FileImportsub:Import>Raw
command opens other multi-image, uncompressed files. A folder of images
can be opened as a stack either by dragging and dropping the folder
onto the 'ImageJ' window or or by choosing FileImportsub:Image-Sequence...
To create a new stack, simply choose FileNewsub:Image...=00005Bn=00005D
and set the Slices field to a value greater than one. The Imagesub:Stacks
submenu contains commands for common stack operations.
figure
images/StacksHyperstacks[Stacks and Hyperstacks]fig:Stacks-and-HyperstacksStacks and Hyperstacks
in ImageJ: FileOpen SamplesMitosis (26MB, 5D stack).
Hyperstacks dimensionality can be reduced using ImageHyperstackssub:Reduce-Dimensionality...,
ImageStackssub:Z-Project... or ImageHyperstackssub:Channels...=00005BZ=00005D
The '(V)' on the window title denotes a virtual image (see
sub:Virtual-Stacks).
figure


sub:StacksMenu, http://fiji.sc/wiki/index.php/Stack_ManipulationStack Manipulations
on Fiji website, http://imagej.nih.gov/ij/plugins/image5d.htmlImage5D


Virtual Stackssub:Virtual-Stacks

Stacks!VirtualVirtual stacks@Virtual stacks Stacks (Virtual),Virtual
stacks are disk resident (as opposed to RAMRAMRandom-Access Memory
resident) and are the only way to load image sequences that do not
fit in RAM. There are several things to keep in mind when working
with virtual stacks:
itemize
Virtual stacks are read-only, so changes made to the pixel data are
not saved when you switch to a different slice. You can work around
this by using macros (e.g., http://imagej.nih.gov/ij/macros/Process_Virtual_Stack.txtProcess Virtual Stack)
or the ProcessBatchsub:Virtual-Stack...
command
You can easily run out of memory using commands like Imagesub:Crop-=00005BX=00005D
because any stack generated from commands that do not generate virtual
stacks will be RAM resident.
TIFF virtual stacks can usually be accessed faster than JPEGJPEG
virtual stacks. A JPEG sequence can be converted to TIFF by opening
the JPEG images as a virtual stack and using FileSave Assub:SaveAs>Image-Seq...
to save in TIFF format
itemize
ImageJ appends a '(V)' to the window title of virtual stacks and
hyperstacks (see sub:Hyperstacks-Intro). Several
built-in ImageJ commands in the Filesub:Import
submenu have the ability to open virtual stacks, namely: sub:Import>TIFF-Virtual-Stack,
sub:Image-Sequence..., sub:Import>Raw,
sub:Stack-From-List..., sub:Import>AVI...
(cf. http://imagej.nih.gov/ij/plugins/virtual-opener.htmlVirtual Stack Opener).
In addition, TIFF stacks can be open as virtual stacks by drag and
drop (cf. infobox:VirtualTiff infobox:VirtualTiff).

http://www.loci.wisc.edu/ome/formats.htmlLOCI Bio-Formats
and http://fiji.sc/wiki/index.php/Register_Virtual_Stack_SlicesRegisterVirtualStackSlices
plugins, http://imagej.nih.gov/ij/macros/Process_Virtual_Stack.txtProcess Virtual Stack
and http://imagej.nih.gov/ij/macros/VirtualStackFromList.txtVirtualStackFromList
macros 

infobox
infobox:VirtualTiffOpening Virtual Stacks by Drag  Drop


TIFF stacks with a .tif extension open as virtual
stacks when dragged and dropped on the images/tools/Switcher-small toolbar
icon.


images/DragAndDropVirtualTiff
infobox



Hyperstackssub:Hyperstacks-Intro

Stacks!HyperstacksHyperstacks are multidimensional images,
extending image stacks to four (4D) or five (5D) dimensions: 
(width),  (height),  (slices),  (channels or wavelengths)
and  (time frames). Hyperstacks are displayed in a window with
three labelled scrollbars (see fig:Stacks-and-Hyperstacks).
Similarly to the scrollbar in sub:Stacks-Intro, the frame
slider (t) has a play/pause icon. 

Imagesub:Hyperstacks submenu


[Color Images]Color ImagesThis section is partially extracted from the MBFImageJ online manual
at http://www.macbiophotonics.ca/imagej/colour_image_processi.htm.sec:Color-Images

MBF ImageJImageJ deals with color mainly in three ways: pseudocolor
images, RGB images, RGB/ HSBHSBHue Saturation Brightness
stacks, and composite images.Image types


Pseudocolor Imagessub:Pseudocolor-Images

A pseudocolor (or indexed color) image is a single channel gray image
(8, 16 or 32-bit) that has color assigned to it via a lookup table
or LUTLUTLookup tableLUT. A LUT is literally
a predefined table of gray values with matching red, green and blue
values so that shadows of gray are displayed as colorized pixels.
Thus, differences in color in the pseudo-colored image reflect differences
in intensity of the object rather than differences in color of the
specimen that has been imaged.

8-bit indexed color images (such as GIFs) are a special case of pseudocolor
images as their lookup table is stored in the file with the image.
These images are limited to 256 colors (24-bit RGB images allow 16.7
million of colors, see sec:Image-Types) and concomitantly
smaller file sizes. Reduction of true color values to a 256 Color palette@Color palette LUT,color
palette is performed by color quantization algorithms. ImageJ uses
the Color!QuantizationHeckbert quantizationAlgorithm!Heckbert quantizationHeckbert's
median-cut color quantization algorithm (see Imagesub:Type
menu), which, in most cases, allows indexed color images to look nearly
identical to their 24-bit originals.

Imagesub:Lookup-Tables and sub:LUTMenu


True Color Imagessub:True-color-images

As described in sec:Image-Types, true color images such
as RGB images reflect genuine colors, i.e., the green in an RGB image
reflects green color in the specimen. Color images are typically produced
by color CCDCCDCharge-Coupled Device cameras, in
which Color filter arraycolor filter arrays (http://en.wikipedia.org/wiki/Bayer_filterBayer masks)
are placed over the image sensor.CCD


Color Spaces and Color Separationsub:Color-Spaces-and

http://en.wikipedia.org/wiki/Color_spaceColor spaces Color!Modelsdescribe
the gamut of colors that image-handling devices deal with. Because
human vision is trichromatic, most color models represent colors by
three values. Mathematically, these values (color components) form
a three-dimensional space such as the RGBRGB, HSBHSB,
CIE LabCIELab or YUVYUV color space. 
figure[h]
images/RGB-HSBcolorModels[RGB and HSB color models]fig:ColorModelsRepresentation of an eight pixel
color image in the RGB and HSB color spaces. The RGB color space
maps the RGB color model to a cube with Red (R) values increasing
along the x-axis, Green (G) along the y-axis and Blue
(B) along the z-axis. In the HSB cylindrical coordinate system, the
angle around the central vertical axis corresponds to Hue (H),
the distance from the axis corresponds to Saturation (S), and
the distance along the axis corresponds to Brightness (B).
In both cases the origin holds the black color. The right panel shows
the same image after brightness reduction, easily noted by the vertical
displacement along the HSB cylinder. Images produced using Kai Uwe
Barthel's http://www.f4.fhtw-berlin.de/ barthel/ImageJ/ColorInspector//help.htm3D Color Inspector
plugin.
figure


RGB (Red, Green, Blue) is the most
commonly-used color space. However, other alternatives such as HSB
(Hue, Saturation, Brightness) provide
significant advantages when processing color information. In the HSB
color space, Hue describes the attribute of pure color, and
therefore distinguishes between colors. Saturation (sometimes
called "purity" or "vibrancy") characterizes the shade of
color, i.e., how much white is added to the pure color. Brightness
(also know as Value - HSV system) describes the overall brightness
of the color (see e.g., the color palette of fig:CPtool).
In terms of digital imaging processing, using the HSB system over
the traditional RGB is often advantageous: e.g., since the Brightness
component of an HSB image corresponds to the grayscale version of
that image, processing only the brightness channel in routines that
require grayscale images is a significant computational gain(See Wootton R, Springall DR, Polak JM. Image Analysis in Histology:
Conventional and Confocal Microscopy. Cambridge University Press,
1995, ISBN 0521434823). You can read more about the HSB color model http://en.wikipedia.org/wiki/HSB_color_spacehere.

In ImageJ, conversions between image types are performed using the
Imagesub:Type submenu. Segmentation
on the HSB, RGB, CIELab and YUV color spaces can be performed by
the ImageAdjustsub:Color-Threshold...
commandC-ColorThres. Segregation of color components (specially
useful for quantification of Color!DeconvolutionColor!Separation@Separation Color!Deconvolution,Immunohistochemistry@Immunohistochemistry Histochemical staining,histochemical
staining) is also possible using Gabriel Landini's http://www.dentistry.bham.ac.uk/landinig/software/cdeconv/cdeconv.htmlColour Deconvolution
plugin. In addition, several other plugins related to color processing
can be obtained from the http://imagej.nih.gov/ij/plugins/index.htmlcolorImageJ website.


Conveying Color InformationThis section is partially extracted from Masataka Okabe and Kei Ito,
Color Universal Design (CUD) - How to make figures and presentations
that are friendly to Colorblind people, http://jfly.iam.u-tokyo.ac.jp/color/,
accessed 2009.01.15sub:Conveying-Color-Information

People see color with significant variations. Indeed, the popular
phrase "One picture is worth ten thousand words" may not apply
to certain color images, specially those that do not follow the basic
principles of http://jfly.iam.u-tokyo.ac.jp/color/Color Universal Design.
Citing Masataka Okabe and Kei Ito:
quotation
Color!BlindnessColorblind people can recognize a wide ranges
of colors. But certain ranges of colors are hard to distinguish. The
frequency of colorblindness is fairly high. One in 12 Caucasian (8),
one in 20 Asian (5), and one in 25 African (4) males are so-called
'red-green' colorblind.

There are always colorblind people among the audience and readers.
There should be more than ten colorblind in a room with 250people
(assuming 50 male and 50 female).

[] There is a good chance that the paper you submit
may go to colorblind reviewers. Supposing that your paper will be
reviewed by three white males (which is not unlikely considering the
current population in science), the probability that at least one
of them is colorblind is whopping 22! 
quotation
figure
images/Dichromacy[Red-green images and partial color blindness]fig:ColorBlindnessRed-green images and partial
color blindness. Deuteranopia (second panel), protanopia (third panel)
are the most common types of partial color blindness (red/green
confusion). Tritanopia (blue/orange confusion, fourth panel)
is quite rare. infobox:Replacing-Red-w-Magenta (bottom
row) is a simple way to compensate for color vision deficiencies.
figure
One practical point defined by the http://jfly.iam.u-tokyo.ac.jp/color/Color Universal Design
is the use of magenta in red-green overlays (see alsoLandini:2009p19625).
Magenta is the equal mixture of red and blue. Colorblind people that
have difficulties recognizing the red component can easily recognize
the blue hue. The region of double positive becomes white, which is
easily distinguishable for colorblind. In ImageJ this is easily accomplished
using the ImageColorsub:Merge-Channels...,
or using the ImageJ macro language (see infobox:Replacing-Red-w-Magenta
infobox:Replacing-Red-w-Magenta). 
infobox
infobox:Replacing-Red-w-MagentaReplacing Red with Magenta
in RGB Images


When building RGB images, magenta can be obtained using the ImageColorsub:Merge-Channels...
Previously created RGB images can be converted to Magenta Green Blue (MGB)'MGB'
using ImageColorsub:Channels...=00005BZ=00005D.
Alternatively, the Processsub:Image-Calculator...
command can be used to add the red channel to the blue channel. Both
these approaches can be automated using the ImageJ macro language
as exemplified by Macros lis:RGBtoMGB1 and lis:RGBtoMGB2.
Once saved in the ImageJ/plugins/ folder these sub:Macros-ExtendingIJ
are treated as regular ImageJ commands.


In sub:Fiji-intro, as expected, the procedure of modifying
RGB images is simpler: one just needs to run ImageColorReplace Red with Magenta.
For even more convenience, Fiji provides an analogous command that
replaces the system clipboard's image with a magenta-green one.
infobox


It is also possible to simulate color blindness using the http://www.vischeck.com/downloads/Vischeck
or http://www.dentistry.bham.ac.uk/landinig/software/dichromacy/dichromacy.htmlDichromacy
plugins(One advantage of Dichromacy over the Vischeck plugin is that it can
be recorded and called from scripts and macros, without user interaction.), or in Fijisub:Fiji-intro, using the ImageColorSimulate Color Blindness
command.
lstlisting[caption=ReplaceRedwithMagenta.ijm (Using ProcessImage Calculator),label=lis:RGBtoMGB2,float=h,showstringspaces=false,tabsize=4]
 /* This macro replaces Red with Magenta in RGB images using Process>Image Calculator...  command. */
   if (bitDepth!=24)
       exit("This macro requires an RGB image");
 setBatchMode(true);
   title= getTitle();
   r= title+" (red)"; g= title+" (green)"; b= title+" (blue)";
   run("Split Channels");
   imageCalculator("Add", b, r);
   run("Merge Channels...", "red=&r green=&g blue=&b");
   rename(title + " (MGB)");
 setBatchMode(false);
lstlisting



Color Composite Imagessub:Color-Composites

In a Color!Compositescomposite image colors are handled through
channels. The advantages with this type of image over plain RGB images
are: 
enumerate
Each channel is kept separate from the others and can be turned on
and off using the 'Channels' tool (ImageColorsub:Channels...=00005BZ=00005D).
This feature allows, e.g., to perform measurements on a specific channel
while visualizing multiple. 
Channels can be 8, 16 or 32-bit and can be displayed with any lookup
table
More than 3channels can be merged or kept separate
enumerate
lstlisting[caption=ReplaceRedwithMagenta.ijm (Using ImageColorChannels),label=lis:RGBtoMGB1,float=h,showstringspaces=false,tabsize=4]
 /* This macro replaces Red with Magenta in RGB images using the Image>Color>Channels... tool. */
   if (bitDepth!=24)         // Ignore non-RGB images
       exit("This macro requires an RGB image");
 setBatchMode(true);         // Enter 'Batch' mode
   title = getTitle();       // Retrieve the image title
   run("Make Composite");    // Run Image>Color>Make Composite
   run("Magenta");           // Run Image>Lookup Tables>Magenta on channel 1
   run("RGB Color");         // Run Image>Type>RGB Color
   rename(title + " (MGB)"); // Rename the image
 setBatchMode(false);        // Restore 'GUI' mode
lstlisting



Selectionssec:Selections-Intro

Selections (regions of interest, ROIsROIRegion Of Interest),
are typically created using the sub:Toolbar sec:IJ-Tools.
Although ImageJ can display simultaneously several SelectionROI@ROI Selection,ROIs
(see sub:Overlay-Intro and fig:The-ROI-Manager)
only one selection can be active at a time. Selections can be measured
(Analyzesub:Measure...=00005Bm=00005D),
drawn (Editsub:Draw-=00005Bd=00005D),
filled (Editsub:Fill-=00005Bf=00005D)
or filtered (Processsub:Filters submenu),
in the case of area selections. In addition it is also possible to
hold multiple ROIs as non-destructive sub:Overlay-Intro.

Selections can be initially outlined in one of the nine ImageJ default
colors (Red, Green, Blue, Magenta, Cyan,
Yellow, Orange, Black and White). Once created,
selections can be contoured or painted with any other color using
EditSelectionsub:Properties....
Selection Color can be changed in EditOptionssub:Colors...,
by double clicking on the sec:Point-Tool, or using hot
keys (see lis:ChangeSelectionColor lis:ChangeSelectionColor).
It is highlighted in the center of the sec:Point-Tool and
sec:Multi-point-Tool.
figure[h]
images/Selectionsfig:exampleAreaROIsThree types of area selections
In ImageJ. Notice the cursor changes: to an arrow when it
is within the selection, to a cross-hair when outside the selection,
to a hand when over a selection vertex or 'handler'. Notice
also the filled handler in the polygon selection and the absence of
point handlers in sub:Composite-selections. sub:Overlay-Intro,
i.e., non-active selections displayed in the non-destructive image
overlay, are also displayed without handlers.
figure



Manipulating ROIssub:Manipulating-ROIs

Most of commands that can be useful in defining or drawing selections
are available in the Editsub:SelectionSubMenu
submenu and summarized in fig:ROI-manipulations. Listed
below are the most frequent manipulations involving ROI@ROI Selection,selections:
lyxlist00000000000
[Adjusting] Area selections can be adjusted
with the sub:Brush-Selection-Tool. In addition, vertexes
of selections created with the sub:Polygon-Selection-Tool
and sub:Segmented-Line-Selection can be adjusted by Alt/Shift-clicking.
[Deleting] Choose any of the selection tools
and click outside the selection, or use EditSelectionsub:Select-None-=00005BA=00005D.
Use EditSelectionsub:Restore-Selection-=00005BE=00005D
to restore a selection back after having deleted it. With sub:Overlay-Intro,
an activated ROI can be deleted by pressing the Backspace
(Delete on Mac) key.
[Managing] A selection can be transferred from
one image window to another by activating the destination window and
runnig EditSelectionsub:Restore-Selection-=00005BE=00005D.
Alternatively, AnalyzeToolssub:SynchronizeWindows
to create ROIs across multiple images. Multiple selections can be
stored as sub:Overlay-Intro or in the fig:The-ROI-Manager
list (AnalyzeToolssub:ROI-Manager...).
[Moving] Selections can be moved by clicking
and dragging as long as the cursor is within the selection and has
changed to an images/pointers/Pointer-Arrow.
The status bar displays the coordinates of the upper left corner of
the selection (or the bounding rectangle for non-rectangular selections)
as it is being moved. To move the contents of a selection, rather
than the selection itself, Editsub:Copy=00005Bc=00005D,
Editsub:Paste=00005Bv=00005D,
and then click within the selection and drag.
[Nudging] Selections can be 'nudged' one pixel
at a time in any direction using the arrow keys. Note that the up
and down keys zoom the image in and out in the absence of selections
(see Arrow-Keys shortcuts).
[Resizing] The sub:Brush-Selection-Tool can
be used to perform fine adjustments of ROI contours. Most ROIs can
be resized one pixel at a time by holding Alt while using the arrow
keys. In general (see sec:Area-selection-tools and
sec:Line-Selection-Tools for details), selections are resized
by dragging one of the selection handlers. While dragging, holding
Ctrl resizes the selection around its center, holding Alt imposes
a fixed aspect ratio and holding Shift forces a 1:1 aspect ratio.
lyxlist
sec:Key-Modifiers


Composite Selectionssub:Composite-selections

wrapfigure[5]l0.245
images/compositeROIwrapfigure
Composite selections are non-contiguous ROIs containing more than
one cluster of pixels and/or ROIs containing internal holes. Composite
ROIs are typically originated with the sub:Brush-Selection-Tool
but they can be defined with any other selection tool using key modifiers. 

The following modifier keys can be use to create composite selections:Selection!Composite
lyxlistshifttt
[Shift] Drawing outside current selection while pressing
Shift creates new content. To add a non-square rectangle or ellipse,
the Shift key must be released after adding the selection
[Alt] Drawing inside current selection while pressing Alt creates
a hole removing content from the ROI
lyxlist
Note that some operations may not be performed properly on complex
ROIs. In these cases, it may be useful to convert a composite ROI
into a polygon using the EditSelectionsub:Enlarge...
command as explained in infobox:Composites infobox:Composites.

sub:Wand-Tool, http://imagejdocu.tudor.lu/doku.php?id=wishlist:completed:freehand_and_selection_brush_roi_conversionROI2PolylineROI
macro


[Selections With Sub-pixel Coordinates]Selections With Sub-pixel Coordinatessub:Sub-pixel-SelectionsSub-pixel selectionsSelections with sub-pixel resolution

Since ImageJ 1.46, selections can be defined with http://en.wikipedia.org/wiki/Sub-pixel_resolutionsubpixel accuracy,
beyond the nominal pixel resolution of the image: fig:Subpixel-selections.
Line Selections (see sec:Line-Selection-Tools) are
created with floating-point coordinates if the Sub-pixel resolution
checkbox is active in EditOptionssub:Profile-Plot-Options...
Sub-pixel coordinates of pre-existing selections can be interpolated
using the EditSelectionsub:Interpolate
command. Interpolated points are easily noticeable on small selections
created on images zoomed 1200 or greater.
figure[h]
images/SubPixel[Floating point selections]fig:Subpixel-selectionsInterpolated selections.
ROIs drawn with (left) or without (middle) sub-pixel accuracy. For
line selections (see sec:Line-Selection-Tools),
this option can be enabled in EditOptionssub:Profile-Plot-Options...
by activating the Sub-pixel resolution checkbox. Pixel coordinates
of area selections (see sec:Area-selection-tools),
can be interpolated using EditSelectionsub:Interpolate.
The image on the right is the output of http://imagej.nih.gov/ij/macros/js/SubPixelSelections.jsSubPixelSelections.js,
a script that demonstrates how to create selections at sub-pixel resolution
without the need of setting any option in ImageJ.
figure


sub:Zoom, sec:Magnifying-Glass


[Overlays]Overlayssub:Overlay-IntroImproved handling of Overlays

OverlayNon-destructive annotations@Non-destructive annotations Overlay,Annotations!Non-destructive image overlayOverlays
are non-active selections displayed 'over' the pixel data, on the
image overlay, and are the core of non-destructive image processing
in ImageJ. In a way you can think of the image overlay as an invisible
fig:The-ROI-Manager in which selections are being added,
allowing ROIs to be on 'hold'. This concept of multiple distinct
selections has been dramatically improved in sub:ImageJ2intro
so we urge you to download IJ2 if multiple ROIs are important in your
workflows.
figure
images/OverlayShowcaseNon-destructive operations using the image overlay. Overlays
can be used to annotate images, store ROIs and blend images (ImageROIs)
at multiple opacity levels. Refer to the Imagesub:Overlaydocumentation
for further fig:image-overlays. You can http://imagej.nih.gov/ij/docs/guide/images/ImageWithOverlay.tifdownload the frontmost
image to practice overlay editing. 
figure


Importantly, overlay selections are http://en.wikipedia.org/wiki/Vector_graphicsvector graphics
composed of mathematically-defined paths (as opposed to http://en.wikipedia.org/wiki/Raster_graphicsraster graphics
in which objects are defined by pixels) and are not affected by scaling,
i.e., do not become pixelated. Most of overlay-related commands are
listed in the Imagesub:Overlay, and in the ROI
Manager window (AnalyzeToolssub:ROI-Manager...).
Appearance of overlay selections can be adjusted using ImageOverlaysub:Overlay-Options.../sub:Labels...

As mentioned in infobox:Formats infobox:Formats,
overlays are saved in the header of tif images, and do not need to
be saved externally when using TIFF, the default file format of ImageJ.
The major advantages of overlays are summarized below:
description
[Storage of ROIs] In ImageJ it is only possible to have a single
ROI at a time. However, it is possible to add selections to the image
overlay using B (ImageOverlaysub:Add-Selection...=00005Bb=00005D).
Once added to the image overlay, ROIs can be re-activated by Alt-clicking,
Control-clicking or long-pressing ( second or longer).
Activated ROIs can be deleted by pressing the Backspace
key. Selections can also be added and recovered in bulk, using the
ImageOverlaysub:From-ROI-Manager/sub:To-ROI-Manager
commands.
[Non-destructive annotations] Overlays are the best way of annotating
images in ImageJ (fig:image-overlays). As vector graphics,
overlays do not change pixel values, can be scaled without loss of
quality even at high zoom levels (see infobox:ZoomedCanvas
infobox:ZoomedCanvas) and can be displayed at different
opacity values (see infobox:HEX infobox:HEX).
RGB snapshots of the image with embedded overlays can be created by
holding Shif F, the shortcut for ImageOverlaysub:Flatten-=00005BF=00005D.
'Flattened' images with the overlay rendered as pixel data are also
created when saving the image as PNG or JPEG (Filesub:SaveAs),
or when printing the image canvas (Filesub:Print...=00005Bp=00005D).
The Flatten command is also listed in the fig:The-ROI-Manager.
[Image ROIs] An Image selection@Image selection ImageROIImageROIimageROI
(image selection) is a ROI that displays an image as an overlay. As
described in EditSelectionsub:Image-to-Selection...
and ImageOverlaysub:Add-Image...,
this allows multiple images to be Blendblended on a single
image canvas.
description

3D Volumessub:3D-Intro

Currently, the support for ThreeD ROIs@3D ROIs3D ROIs3D
ROIs (selections containing contiguous cluster of voxels) is somewhat
limited in ImageJ. This limitation has been addressed by sub:ImageJ2intro
and several IJ1 plugins. The list below summarizes some of the ImageJ
plugins that deal effectively with multi-dimensional objects. Note
that a manual installation of these tools as standalone ImageJ plugins
is a challenging task given their special dependencies, reason why
they are all bundled as part of Fijisub:Fiji-intro.
figure
images/3Dviewer[3D Viewer]fig:-3D-Viewer3D Viewer (Fiji1.46o), bringing
hardware-accelerated 3D visualization to ImageJ. As explained in
sub:3D-Intro, most of plugins that truly extend ImageJ
functionally to multi-dimentional data are bundled as part of Fiji.
figure

description
[3D Filters] Specialized ThreeD Filters@3D Filters3D Filters3D
filters such as ProcessFilterssub:Gaussian-Blur-3D...
can be installed to perform 3D operations. Examples are the http://imagejdocu.tudor.lu/doku.php?id=plugin:morphology:3d_binary_morphological_filters:start3D processing package
by Thomas BoudierIannuccelli:2010p13791 and the http://fiji.sc/wiki/index.php/3D_Binary_Filters3D binary filters
by Benjamin Schmid.
[3D Object Counter] http://imagejdocu.tudor.lu/doku.php?id=plugin:analysis:3d_object_counter:start3D Object Counter
(3D-OC) ThreeD Object Counter@3D Object Counter3D Object Countercounts
and qualifies 3D objects in a stackBolte:2006p2466, similarly
to the 2D analysis performed by Analyzesub:Analyze-Particles...
It is complemented by http://imagejdocu.tudor.lu/doku.php?id=plugin:stacks:3d_roi_manager:start3D Roi Manager
Iannuccelli:2010p13791, a companion plugin that adds a 3D
fig:The-ROI-Manager to ImageJ
[3D Viewer] http://3dviewer.neurofly.de/3D Viewer ThreeD Viewer@3D Viewer3D Viewerbrings
powerful hardware-accelerated 3D visualization to ImageJSchmid:2010p18702,
extending the limited functionality of ImageStackssub:3D-Project...
In the ImageJ fig:-3D-Viewer stacks can be displayed as
texture-based volume renderings, surfaces or orthoslices. It is macro-recordable
and can be used by other plugins as a high-level programming library
for 3D visualization
[Simple Neurite Tracer] http://fiji.sc/wiki/index.php/Simple_Neurite_TracerSimple Neurite Tracer
Simple Neurite Tracerallows semi-automated segmentation of
tubular structures in 3DLongair:2011p20768
[TrakEM2] As mentioned earlier, misc:TrakEM2 features
powerful tools for multi-dimensional regions of interestCardona:2010p18306
description
ImageStackssub:3D-Project.../sub:Orthogonal-Views,
Analyzesub:Surface-Plot..., infobox:Skeletonize-vs-Skeletonize3D
infobox:Skeletonize-vs-Skeletonize3D, http://fiji.sc/wiki/index.php/Special:Search?search=3d&fulltext=Search3D tools in Fiji,
http://www.longair.net/edinburgh/imagej/three-pane-crop/Three Pane Crop,
http://imagejdocu.tudor.lu/doku.php?id=tutorial:working:3d_image_processing_and_analysis_with_imagej3D image processing tutorials
on the ImageJ wikipage


[Settings and Preferences]Settings and Preferencessec:Settings-and-Preferences

SettingsPreferences@Preferences Settings,Options@Options Settings,ImageJ
preferences are automatically saved in a preferences file, the
IJprefs.txt text file. This file is stored in /Library/Preferences/
on Mac OSX, in /.imagej/ on Linux and Windows (with 
referring to the user's home directory). Several macros and plugins
also write parameters to this file. If the IJprefs.txt is erased
using EditOptionssub:ResetOptions,
ImageJ will create a new one the next time it is opened resetting
all parameters to their default values. 

Sometimes, it may be useful to override (or restore) certain settings
that may have been changed during a working session. For example,
the Limit to threshold option (Analyzesub:Set-Measurements...)
will affect most measurements performed on thresholded images. Thus,
it may be wise to check the status of this parameter before each analysis,
specially when working on multiple computers.

lstlisting[caption=Ensuring Specific Settings at Launch,label=lis:setOption,float=h,showstringspaces=false,tabsize=4]
 macro "AutoRun" 
   setOption("DebugMode", true);
   setOption("Bicubic", true);
   setOption("Display Label", true);
   setOption("Limit to Threshold", false);
   setOption("BlackBackground", true);
   run("Colors...", "foreground=white background=black"); //this line could be substituted by: setBackgroundColor(0,0,0); setForegroundColor(255,255,255);
   run("Profile Plot Options...", "width=350 height=200 draw");
   run("Brightness/Contrast...");
 
lstlisting
The setOption() http://imagej.nih.gov/ij/developer/macro/functions.htmlsetOptionmacro function
can be used to set this and several other ImageJ options. Calling
this function from the StartupMacrosAutoRun"AutoRun"
macro in the StartupMacros.txt file ensures preferences are set each
time ImageJ starts. The macro lis:setOption lis:setOption
exemplifies this approach ensuring that the following settings are
enforced at startup:
enumerate
TIFF tag values are displayed by ImageJ (Debug Mode in EditOptionssub:Misc...)
Bicubic interpolation is preferred over bilinear (e.g., EditSelectionsub:Straighten...)
The name of the measured image name is recorded in the first column
of the sec:Results-Table (Display Label in Analyzesub:Set-Measurements...)
Measurements are not restricted to thresholded pixels (Limit
to Threshold in Analyzesub:Set-Measurements...)
Binary images are processed assuming white objects on a black background
(Black background in ProcessBinarysub:BinaryOptions...,
see infobox:blackBackground infobox:blackBackground)
Background color is black and foreground color is white
(EditOptionssub:Colors...)
ImageJ plots contain grid lines and are always pixels
in size (EditOptionssub:Profile-Plot-Options...)
Open the BC widget at its last saved screen position (ImageAdjustsub:Brightness/Contrast...=00005BC=00005D)
enumerate
sec:GUIcustomization, FAQsFAQFrequently Asked Questions
on http://imagejdocu.tudor.lu/doku.php?id=faq:technical:how_do_i_set_up_imagej_to_deal_with_white_particles_on_a_black_background_by_defaultImageJ wikipage,
infobox:Organizing-Commands infobox:Organizing-Commands 
